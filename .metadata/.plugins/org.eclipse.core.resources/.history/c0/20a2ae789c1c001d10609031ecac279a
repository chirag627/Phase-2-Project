
package academy3;

import java.io.IOException;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.Resource;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.sql.DataSource;

import academy3.domain.AcademyClasses;
import academy3.domain.AcademySubjects;
import academy3.domain.AcademyTeachers;

public class AcademyAssignTeacher extends HttpServlet {
	private static final long serialVersionUID = 1L;
	@Resource(name = "Academy")
	private DataSource datasource;

	Connection myConn = null;
	Statement myStmt = null;
	ResultSet myRs = null;

	public void init() throws ServletException {
		try {
			myConn = datasource.getConnection();
		} catch (SQLException e) {
			System.out.println("Cannot connect to the database");
		}

	}

	@Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String action = request.getParameter("action");
		switch (action) {
		case "doRead":
			doRead(request, response);
			break;
		case "tcAssign":
			tcAssign(request, response);
			break;
		}
	}

	private void doRead(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		List<AcademySubjects> read_subjects = new ArrayList<>();
		List<AcademyTeachers> read_teachers = new ArrayList<>();
		try {
			myStmt = myConn.createStatement();
			myRs = myStmt.executeQuery("select * from subjects where subject_teacher>0");
			while (myRs.next()) {
				int subject_id = myRs.getInt(1);
				String subject_name = myRs.getString(2);

				String subject_teacher = myRs.getString(3);
				read_subjects.add(new AcademySubjects(subject_id, subject_name, subject_teacher));
			}
			myStmt.close();
			myStmt = myConn.createStatement();

			myRs = myStmt.executeQuery("select * from teacher");
			while (myRs.next()) {
				int teacher_id = myRs.getInt(1);
				String teacher_name = myRs.getString(2);
				String teacher_phone = myRs.getString(3);
				read_teachers.add(new AcademyTeachers(teacher_id, teacher_name, teacher_phone));
			}
			myStmt.close();
			request.setAttribute("READ_TEACHER", read_teachers);
			request.setAttribute("READ_CLASS", read_classes);

			RequestDispatcher rd = request.getRequestDispatcher("web/class/assign_teacher.jsp");
			rd.include(request, response);

		} catch (SQLException e) {
			System.out.println(e);
		}

	}

	private void tcAssign(HttpServletRequest request, HttpServletResponse response) throws IOException {
		int rowAssigned;

		String subject_id = request.getParameter("subject_name");
		String teacher_id = request.getParameter("teacher_name");
	
		try {
			myStmt = myConn.createStatement();
			rowAssigned = myStmt.executeUpdate(
					"update subject set subject_teacher=\"" + teacher_id + "\" where subject_id=\"" + subject_id + "\"");

			if (rowAssigned > 0) {
				response.sendRedirect("web/success.jsp?n=subject%20Updated%20to%20the%20database");
			}

		} catch (SQLException e) {
			System.out.println(e);
			response.sendRedirect("web/subject/assign_class.jsp?n=Something%20went%20wrong");
		}

	}

}
